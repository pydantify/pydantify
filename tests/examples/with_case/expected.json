{
  "$defs": {
    "Ethernet2Case": {
      "description": "Option B",
      "properties": {
        "interfaces:name2": {
          "$ref": "#/$defs/Name2Leaf",
          "default": null
        }
      },
      "title": "Ethernet2Case",
      "type": "object"
    },
    "EthernetCase": {
      "properties": {
        "interfaces:ethernet": {
          "$ref": "#/$defs/EthernetContainer",
          "default": null
        }
      },
      "title": "EthernetCase",
      "type": "object"
    },
    "EthernetContainer": {
      "description": "Option A",
      "properties": {
        "interfaces:name": {
          "$ref": "#/$defs/NameLeaf",
          "default": null
        }
      },
      "title": "EthernetContainer",
      "type": "object"
    },
    "Name2Leaf": {
      "type": "string"
    },
    "NameLeaf": {
      "type": "string"
    }
  },
  "description": "Initialize an instance of this class and serialize it to JSON; this results in a RESTCONF payload.\n\n## Tips\nInitialization:\n- all values have to be set via keyword arguments\n- if a class contains only a `root` field, it can be initialized as follows:\n    - `member=MyNode(root=<value>)`\n    - `member=<value>`\n\nSerialziation:\n- `exclude_defaults=True` omits fields set to their default value (recommended)\n- `by_alias=True` ensures qualified names are used (necessary)",
  "properties": {
    "interfaces:interface-type": {
      "anyOf": [
        {
          "$ref": "#/$defs/EthernetCase"
        },
        {
          "$ref": "#/$defs/Ethernet2Case"
        }
      ],
      "default": null
    }
  },
  "title": "Model",
  "type": "object"
}

